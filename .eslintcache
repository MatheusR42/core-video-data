[{"/home/matheusr42/Documents/projects/vtex-data-extractor/src/reportWebVitals.js":"1","/home/matheusr42/Documents/projects/vtex-data-extractor/src/App.js":"2","/home/matheusr42/Documents/projects/vtex-data-extractor/src/index.js":"3","/home/matheusr42/Documents/projects/vtex-data-extractor/src/Helpers.js":"4"},{"size":362,"mtime":1609960014947,"results":"5","hashOfConfig":"6"},{"size":5202,"mtime":1609968112007,"results":"7","hashOfConfig":"6"},{"size":478,"mtime":1609960278718,"results":"8","hashOfConfig":"6"},{"size":7266,"mtime":1609963610037,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ivt5gr",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/matheusr42/Documents/projects/vtex-data-extractor/src/reportWebVitals.js",[],"/home/matheusr42/Documents/projects/vtex-data-extractor/src/App.js",[],"/home/matheusr42/Documents/projects/vtex-data-extractor/src/index.js",[],["20","21"],"/home/matheusr42/Documents/projects/vtex-data-extractor/src/Helpers.js",["22","23","24","25"],"class ProductHelpers {\n  getProductField(product, field) {\n      let { properties } = product;\n\n      if (properties) {\n          properties = properties.filter(property => {\n              return property.name == field;\n          });\n          return properties.length > 0 ? properties[0].values[0] : null;\n      }\n      return null;\n  }\n\n  filterSkuDisponibleInProduct(product, showOutStock) {\n      const sku = product.items\n          .map((item, index) => {\n              return { ...item, itemIndex: index };\n          })\n          .filter(item => {\n              return (\n                  this.isAvaliableInOneOfSellers(item.sellers) || showOutStock\n              );\n          })[0];\n\n      return sku;\n  }\n\n  getFirstSkuAvaliable(product) {\n      const sku = product.items.filter(item => {\n          return this.isAvaliableInOneOfSellers(item.sellers);\n      })[0];\n\n      return sku;\n  }\n\n  isAvaliableInOneOfSellers(sellers) {\n      return sellers.filter(seller => {\n          return seller.commertialOffer.AvailableQuantity > 0;\n      }).length;\n  }\n\n  isAvaliable(product) {\n      const skus = product.items.filter(item => {\n          return this.isAvaliableInOneOfSellers(item.sellers);\n      });\n\n      return skus.length;\n  }\n\n  mapInstallments(installments) {\n      installments = installments.map(installment => {\n          return {\n              NumberOfInstallments: installment.NumberOfInstallments,\n              InterestRate: installment.InterestRate\n          };\n      });\n\n      if (!installments.length > 0) {\n          return null;\n      }\n\n      const noInterestRateInstallments = installments.filter(\n          installment => !installment.InterestRate\n      );\n\n      const installment = (!noInterestRateInstallments.length\n          ? installments\n          : noInterestRateInstallments\n      ).reduce((previous, current) =>\n          previous.NumberOfInstallments > current.NumberOfInstallments\n              ? previous\n              : current\n      );\n\n      return installment.NumberOfInstallments;\n  }\n\n  getNumberOfInstallments(installments) {\n      if (!installments) return;\n\n      let numberOfInstallments = null;\n\n      if (!installments.length > 0 && typeof installments === 'number') {\n          numberOfInstallments = installments;\n      } else {\n          installments = installments.filter((installment, index) => {\n              return installment !== null;\n          });\n\n          numberOfInstallments = this.mapInstallments(installments);\n      }\n\n      return numberOfInstallments;\n  }\n\n  getProductField(product, field) {\n      let { properties } = product;\n\n      if (properties) {\n          properties = properties.filter(property => {\n              return property.name == field;\n          });\n          return properties.length > 0 ? properties[0].values[0] : null;\n      }\n      return null;\n  }\n\n  numberToReal(numero) {\n    var numero = numero.toFixed(2).split('.');\n    numero[0] = numero[0].split(/(?=(?:...)*$)/).join('.');\n    return numero.join(',');\n  }\n\n  getPrincipalImageFromProduct(product) {\n      const sku = product.items[0];\n      let image = sku.images[0].imageUrl;\n\n      sku.images.forEach(({ imageText, imageUrl }) => {\n          if (imageText === 'principal') {\n              image = imageUrl;\n          }\n      });\n\n      return image;\n  }\n\n  isInCollection(product, name) {\n      return (\n          product && product.productClusters.find(item => item.name === name)\n      );\n  }\n\n  isInArr(product) {\n      return product && product.properties.find(item => item.values);\n  }\n\n  isCategory(product) {\n      let category = product.properties.filter(item => {\n          return item.name === 'Categoria';\n      });\n      return category[0].values[0];\n  }\n\n  isfootwear(product) {\n      if (!product || !product.categories) {\n          return null\n      }\n      let category = product.categories.filter(item => {\n          return item === \"/Calçado/Tênis/\";\n      });\n      return category[0]\n  }\n\n  isBenefits(product) {\n      let category = product.properties.filter(item => {\n          return item.name === 'Benefícios';\n      });\n      return category[0].values;\n  }\n\n  isCategoryIsLessThan(product) {\n      let category = product.properties.filter(item => {\n          return item.name === 'Categoria';\n      });\n      let word = category[0].values[0];\n      if (word === 'Cross Training') {\n          category[0].values.unshift('CrossTraining');\n          return true;\n      }\n      if (word.length >= 10) {\n          return true;\n      }\n      return false;\n  }\n\n  isDetails(product) {\n      let category = product.properties.filter(item => {\n          return item.name === 'Detalhes do produto';\n      });\n      return category[0].values;\n  }\n\n  isHtmlDescription(product) {\n      let html = product.properties.filter(item => {\n          return item.name === 'Descrição HTML';\n      });\n      if (html && html[0]) {\n          return html[0].values[0];\n      }\n      return null;\n  }\n\n  getItems(arr) {\n      const newArray = [];\n      const numbersArray = [];\n\n      if (!arr.length) {\n          return [];\n      }\n\n      arr.forEach((item, originalIndex) => {\n          if (arr.indexOf(item) > -1) {\n              if (item.name === 'PP' || item.name === 'U') {\n                  newArray.push({\n                      originalIndex,\n                      item: item.name,\n                      order: 0,\n                      sellers: item.sellers[0].commertialOffer.AvailableQuantity\n                  });\n              }\n              if (item.name === 'P') {\n                  newArray.push({\n                      originalIndex,\n                      item: item.name,\n                      order: 1,\n                      sellers: item.sellers[0].commertialOffer.AvailableQuantity\n                  });\n              }\n              if (item.name === 'M') {\n                  newArray.push({\n                      originalIndex,\n                      item: item.name,\n                      order: 2,\n                      sellers: item.sellers[0].commertialOffer.AvailableQuantity\n                  });\n              }\n              if (item.name === 'G') {\n                  newArray.push({\n                      originalIndex,\n                      item: item.name,\n                      order: 3,\n                      sellers: item.sellers[0].commertialOffer.AvailableQuantity\n                  });\n              }\n              if (item.name === 'GG') {\n                  newArray.push({\n                      originalIndex,\n                      item: item.name,\n                      order: 4,\n                      sellers: item.sellers[0].commertialOffer.AvailableQuantity\n                  });\n              } else {\n                  numbersArray.push({\n                      originalIndex,\n                      item: parseFloat(item.name.replace(',', '.')),\n                      sellers: item.sellers[0].commertialOffer.AvailableQuantity\n                  });\n              }\n          }\n      });\n\n      return newArray.length\n          ? newArray.sort((a, b) => {\n                return a.order - b.order;\n            })\n          : numbersArray.sort((a, b) => {\n                return a.item - b.item;\n            });\n  }\n}\n\nexport default new ProductHelpers();",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":7,"column":36,"nodeType":"32","messageId":"33","endLine":7,"endColumn":38},{"ruleId":"34","severity":1,"message":"35","line":96,"column":3,"nodeType":"36","messageId":"33","endLine":106,"endColumn":4},{"ruleId":"30","severity":1,"message":"31","line":101,"column":36,"nodeType":"32","messageId":"33","endLine":101,"endColumn":38},{"ruleId":"37","severity":1,"message":"38","line":109,"column":9,"nodeType":"39","messageId":"40","endLine":109,"endColumn":15},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-class-members","Duplicate name 'getProductField'.","MethodDefinition","no-redeclare","'numero' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]